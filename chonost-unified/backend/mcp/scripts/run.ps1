#!/usr/bin/env powershell
<#
.SYNOPSIS
    File System MCP Project Launcher
    ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ File System MCP

.DESCRIPTION
    PowerShell script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏≠‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ

.PARAMETER App
    ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î (chat, advanced, ai, dataset, test, ollama)

.PARAMETER All
    ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô

.PARAMETER Help
    ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠

.EXAMPLE
    .\run.ps1 chat
    ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô

.EXAMPLE
    .\run.ps1 ai
    ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° AI

.EXAMPLE
    .\run.ps1 -All
    ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
#>

param(
    [Parameter(Position=0)]
    [ValidateSet("chat", "advanced", "ai", "dataset", "test", "ollama", "help")]
    [string]$App,
    
    [switch]$All,
    [switch]$Help
)

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
$Colors = @{
    Success = "Green"
    Warning = "Yellow"
    Error = "Red"
    Info = "Cyan"
    Title = "Magenta"
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ
function Write-ColorText {
    param(
        [string]$Text,
        [string]$Color = "White"
    )
    Write-Host $Text -ForegroundColor $Colors[$Color]
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
function Show-Header {
    Write-Host ""
    Write-ColorText "üöÄ File System MCP Project Launcher" "Title"
    Write-ColorText "=" * 50 "Title"
    Write-Host ""
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
function Show-Help {
    Show-Header
    Write-ColorText "üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ:" "Info"
    Write-Host ""
    
    $commands = @(
        @("chat", "‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô", "desktop_chat_app.py")
        @("advanced", "‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á", "advanced_chat_app.py")
        @("ai", "‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° AI", "ai_enhanced_chat_app.py")
        @("dataset", "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡∏∂‡∏Å AI", "dataset_generator.py")
        @("test", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ollama connection", "ollama_client.py")
        @("ollama", "‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ollama (alias)", "ollama_client.py")
    )
    
    foreach ($cmd in $commands) {
        Write-Host "  " -NoNewline
        Write-ColorText "$($cmd[0].PadRight(10))" "Success"
        Write-Host " - $($cmd[1])" -NoNewline
        Write-Host " ($($cmd[2]))" -ForegroundColor Gray
    }
    
    Write-Host ""
    Write-ColorText "üîß ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©:" "Info"
    Write-Host "  -All       - ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
    Write-Host "  -Help      - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"
    Write-Host ""
    
    Write-ColorText "üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:" "Info"
    Write-Host "  .\run.ps1 chat           # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"
    Write-Host "  .\run.ps1 ai             # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° AI"
    Write-Host "  .\run.ps1 dataset        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    Write-Host "  .\run.ps1 -All           # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
    Write-Host ""
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
function Test-Requirements {
    Write-ColorText "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á..." "Info"
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python
    try {
        $pythonVersion = python --version 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-ColorText "‚úÖ Python: $pythonVersion" "Success"
        } else {
            Write-ColorText "‚ùå Python ‡πÑ‡∏°‡πà‡∏û‡∏ö" "Error"
            return $false
        }
    } catch {
        Write-ColorText "‚ùå Python ‡πÑ‡∏°‡πà‡∏û‡∏ö" "Error"
        return $false
    }
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Virtual Environment
    if (Test-Path "venv\Scripts\Activate.ps1") {
        Write-ColorText "‚úÖ Virtual Environment ‡∏û‡∏ö" "Success"
    } else {
        Write-ColorText "‚ö†Ô∏è Virtual Environment ‡πÑ‡∏°‡πà‡∏û‡∏ö" "Warning"
        Write-ColorText "üí° ‡∏™‡∏£‡πâ‡∏≤‡∏á venv ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: python -m venv venv" "Info"
    }
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å
    $requiredFiles = @(
        "file_system_analyzer.py",
        "desktop_chat_app.py",
        "advanced_chat_app.py",
        "dataset_generator.py",
        "ollama_client.py"
    )
    
    $missingFiles = @()
    foreach ($file in $requiredFiles) {
        if (Test-Path $file) {
            Write-ColorText "‚úÖ $file" "Success"
        } else {
            Write-ColorText "‚ùå $file ‡πÑ‡∏°‡πà‡∏û‡∏ö" "Error"
            $missingFiles += $file
        }
    }
    
    if ($missingFiles.Count -gt 0) {
        Write-ColorText "‚ùå ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏≤‡∏¢‡πÑ‡∏õ: $($missingFiles -join ', ')" "Error"
        return $false
    }
    
    Write-Host ""
    return $true
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ
function Start-Application {
    param(
        [string]$AppName,
        [string]$ScriptPath,
        [string]$Description
    )
    
    Write-ColorText "üöÄ ‡πÄ‡∏õ‡∏¥‡∏î $Description..." "Info"
    
    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ Virtual Environment ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (Test-Path "venv\Scripts\Activate.ps1") {
        # ‡πÉ‡∏ä‡πâ Virtual Environment
        $command = "& venv\Scripts\Activate.ps1; python $ScriptPath"
        Write-ColorText "üì¶ ‡πÉ‡∏ä‡πâ Virtual Environment" "Info"
    } else {
        # ‡πÉ‡∏ä‡πâ Python global
        $command = "python $ScriptPath"
        Write-ColorText "üåê ‡πÉ‡∏ä‡πâ Python global" "Warning"
    }
    
    try {
        # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
        Start-Process powershell -ArgumentList "-NoExit", "-Command", $command
        Write-ColorText "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î $Description ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" "Success"
        Write-Host ""
    } catch {
        Write-ColorText "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î $Description ‡πÑ‡∏î‡πâ: $($_.Exception.Message)" "Error"
        Write-Host ""
    }
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function Start-AllApplications {
    Write-ColorText "üöÄ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î..." "Title"
    Write-Host ""
    
    $apps = @(
        @("chat", "desktop_chat_app.py", "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
        @("advanced", "advanced_chat_app.py", "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á")
        @("ai", "ai_enhanced_chat_app.py", "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° AI")
    )
    
    foreach ($app in $apps) {
        Start-Application $app[0] $app[1] $app[2]
        Start-Sleep -Seconds 1  # ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ
    }
    
    Write-ColorText "üéâ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!" "Success"
}

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
function Main {
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    if ($Help -or $App -eq "help" -or (-not $App -and -not $All)) {
        Show-Help
        return
    }
    
    Show-Header
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
    if (-not (Test-Requirements)) {
        Write-ColorText "‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô" "Error"
        return
    }
    
    # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    if ($All) {
        Start-AllApplications
        return
    }
    
    # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    switch ($App.ToLower()) {
        "chat" {
            Start-Application "chat" "desktop_chat_app.py" "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"
        }
        "advanced" {
            Start-Application "advanced" "advanced_chat_app.py" "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á"
        }
        "ai" {
            Start-Application "ai" "ai_enhanced_chat_app.py" "‡πÅ‡∏≠‡∏õ‡πÅ‡∏ä‡∏ï‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° AI"
        }
        "dataset" {
            Write-ColorText "üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡∏∂‡∏Å AI..." "Info"
            if (Test-Path "venv\Scripts\Activate.ps1") {
                & venv\Scripts\Activate.ps1
                python dataset_generator.py
            } else {
                python dataset_generator.py
            }
        }
        { $_ -eq "test" -or $_ -eq "ollama" } {
            Write-ColorText "üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Ollama..." "Info"
            if (Test-Path "venv\Scripts\Activate.ps1") {
                & venv\Scripts\Activate.ps1
                python ollama_client.py
            } else {
                python ollama_client.py
            }
        }
        default {
            Write-ColorText "‚ùå ‡πÅ‡∏≠‡∏õ '$App' ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å" "Error"
            Write-ColorText "üí° ‡πÉ‡∏ä‡πâ .\run.ps1 -Help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ" "Info"
        }
    }
}

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
Main
