version: '3.8'

services:
  universal-mcp-server:
    build: .
    container_name: universal-fs-mcp-server
    image: universal-fs-mcp:latest
    restart: unless-stopped
    
    # Environment variables
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - MCP_SERVER_MODE=production
      - LOG_LEVEL=INFO
    
    # Volume mounts for data persistence
    volumes:
      - ./data:/data
      - ./logs:/logs
      - ./datasets:/app/datasets
      # Mount host directories for file system access
      - /:/host:ro  # Read-only access to host file system
      - ./config:/app/config
    
    # Network configuration
    networks:
      - mcp-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Command override for development
    command: ["python", "src/server/universal_fs_mcp_server.py"]
    
    # Port mapping (if HTTP API is enabled)
    ports:
      - "8000:8000"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # User configuration
    user: "1000:1000"

  # Optional: Database service for persistent storage
  mcp-database:
    image: sqlite:latest
    container_name: mcp-database
    restart: unless-stopped
    
    volumes:
      - ./data/database:/var/lib/sqlite
      - ./data/backups:/backups
    
    environment:
      - SQLITE_DATABASE=mcp_server.db
    
    networks:
      - mcp-network
    
    profiles:
      - database

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mcp-data:
    driver: local
  mcp-logs:
    driver: local
