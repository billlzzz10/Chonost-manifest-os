{
  "project": "Chonost Ecosystem",
  "version": "1.0.0",
  "description": "Configuration template for Chonost Ecosystem - Copy this file to config.json and add your actual API keys",
  
  "ai_providers": {
    "openai": {
      "api_key": "YOUR_OPENAI_API_KEY_HERE",
      "organization": "YOUR_OPENAI_ORG_ID_HERE",
      "base_url": "https://api.openai.com/v1"
    },
    "anthropic": {
      "api_key": "YOUR_ANTHROPIC_API_KEY_HERE",
      "base_url": "https://api.anthropic.com"
    },
    "azure": {
      "api_key": "YOUR_AZURE_AI_API_KEY_HERE",
      "endpoint": "YOUR_AZURE_ENDPOINT_HERE",
      "api_version": "2024-02-15-preview"
    },
    "cohere": {
      "api_key": "YOUR_COHERE_API_KEY_HERE",
      "base_url": "https://api.cohere.ai"
    },
    "ollama": {
      "base_url": "http://localhost:11434",
      "models": ["llama2", "mistral", "codellama"]
    }
  },
  
  "local_models": {
    "huggingface": {
      "cache_dir": "./models/huggingface",
      "models": [
        "microsoft/DialoGPT-medium",
        "gpt2",
        "bert-base-uncased"
      ]
    },
    "vllm": {
      "base_url": "http://localhost:8000",
      "models": ["llama2-7b", "mistral-7b"]
    }
  },
  
  "database": {
    "type": "sqlite",
    "path": "./data/chonost.db",
    "vector_db": {
      "type": "qdrant",
      "host": "localhost",
      "port": 6333,
      "collection": "chonost_embeddings"
    }
  },
  
  "security": {
    "allowed_commands": ["git", "python", "pytest", "flake8", "black"],
    "blocked_commands": ["rm", "del", "format", "shutdown", "reboot"],
    "max_file_size": "10MB",
    "allowed_file_types": [".py", ".ts", ".js", ".json", ".yaml", ".md", ".txt"]
  },
  
  "logging": {
    "level": "INFO",
    "format": "json",
    "output": "logs/chonost.log",
    "max_size": "100MB",
    "backup_count": 5
  },
  
  "performance": {
    "max_concurrent_requests": 10,
    "request_timeout": 30,
    "cache_ttl": 3600,
    "rate_limit": {
      "requests_per_minute": 60,
      "burst_size": 10
    }
  },
  
  "mcp": {
    "servers": {
      "filesystem": {
        "transport": "stdio",
        "command": "python",
        "args": ["-m", "mcp.server.filesystem"]
      },
      "postgres": {
        "transport": "stdio",
        "command": "python",
        "args": ["-m", "mcp.server.postgres"]
      },
      "github.com/github/github-mcp-server": {
        "type": "http",
        "url": "https://api.githubcopilot.com/mcp/"
      }
    },
    "tools": {
      "git_status": {
        "description": "Get git repository status",
        "command": ["git", "status", "--porcelain"]
      },
      "run_tests": {
        "description": "Run pytest tests",
        "command": ["python", "-m", "pytest"]
      }
    }
  }
}
