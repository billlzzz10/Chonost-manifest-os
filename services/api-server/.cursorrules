# üöÄ Chonost Ecosystem - Cursor Rules v2.1

## üéØ Project Overview
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå "Chonost Ecosystem" ‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ UX ‡πÑ‡∏£‡πâ‡∏£‡∏≠‡∏¢‡∏ï‡πà‡∏≠

## üìã Master Blueprint v2.1: The Core Product & Platform Split

### Repository Structure
- **`chonost-app`** (The Core Product): Tauri + Sidecar Desktop Application
- **`chonost-mcp`** (The Extensible Platform): Extensible Tool Platform

## üîë Core Concepts & Terminology (‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå)

### The All-Seeing Eye
- ‡∏£‡∏∞‡∏ö‡∏ö Project Manifest ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ `watchdog` ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
- ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á metadata

### The Forge
- ‡∏£‡∏∞‡∏ö‡∏ö Code Interpreter ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Jupyter Kernel ‡∏ú‡πà‡∏≤‡∏ô Docker
- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏ö‡∏ö interactive ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á

### The Trinity Layout
- UI ‡∏´‡∏•‡∏±‡∏Å 3 ‡∏™‡πà‡∏ß‡∏ô:
  - **‡∏ã‡πâ‡∏≤‡∏¢**: Explorer (File/Project Browser)
  - **‡∏Å‡∏•‡∏≤‡∏á**: Editor/Whiteboard (Code Editor + Excalidraw)
  - **‡∏Ç‡∏ß‡∏≤**: Chat/Tools (AI Chat + Tool Panel)

### The Living Dictionary
- ‡∏£‡∏∞‡∏ö‡∏ö RAG (Retrieval-Augmented Generation) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≤‡∏£‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
- ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ

### Lego Model
- ‡∏õ‡∏£‡∏±‡∏ä‡∏ç‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
- ‡∏ó‡∏∏‡∏Å component ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô reusable ‡πÅ‡∏•‡∏∞ pluggable

### MCP (Master Control Program)
- ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Tool ‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
- ‡πÄ‡∏õ‡πá‡∏ô "‡∏ó‡πà‡∏≤‡πÄ‡∏£‡∏∑‡∏≠" ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á components

### AI Agents
- "‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤" ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏≤‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ç‡∏≠‡∏á AI Trinity (‡∏™‡∏°‡∏≠‡∏á)
- ‡πÅ‡∏ï‡πà‡∏•‡∏∞ agent ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö autonomous

## üõ†Ô∏è Tech Stack & Standards

### chonost-app (The Core Product)
```typescript
// Frontend Stack
- React + Vite
- TypeScript (strict mode)
- TailwindCSS
- @excalidraw/excalidraw (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Whiteboard)

// Backend Stack (Sidecar)
- FastAPI
- Pydantic V2
- SQLAlchemy 2.0 (Async)
- LiteLLM (AI Model Management)
- Qdrant (Vector Database)
- Sentence-Transformers (Embeddings)
- Dramatiq + Redis (Task Queue)
- Jupyter Client (Code Execution)
```

### chonost-mcp (The Extensible Platform)
```python
# Server Stack
- FastAPI
- WebSockets
- HTTPX (HTTP Client)

# Database
- SQLite (‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢ Alembic)
```

## ‚ö° Golden Rules (‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô)

### 1. ‡∏¢‡∏∂‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÅ‡∏•‡∏∞ Tech Stack
- ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ technologies ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô Tech Stack
- ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏° dependencies ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö compatibility ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° package ‡πÉ‡∏´‡∏°‡πà

### 2. ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÄ‡∏™‡∏°‡∏≠
- **‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏¥‡∏¢‡∏≤‡∏¢ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÄ‡∏™‡∏°‡∏≠**
- **‡∏´‡πâ‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°** ‡πÄ‡∏ß‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡∏™‡∏±‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö

### 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Syntax ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
- **‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ Syntax ‡πÄ‡∏â‡∏û‡∏≤‡∏∞** (‡πÄ‡∏ä‡πà‡∏ô Mermaid, YAML, JSON) ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏°‡∏≠
- ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤ "‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Syntax"

### 4. ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á Core Concepts ‡πÄ‡∏™‡∏°‡∏≠
- **‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å** ‡πÉ‡∏´‡πâ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏™‡∏ï‡πå Core Concepts ‡πÄ‡∏™‡∏°‡∏≠
- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Logic ‡∏Å‡∏≤‡∏£ Indexing ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö The All-Seeing Eye"
- ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô Context ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à

### 5. Coding Style Standards
```python
# Python
- Black (code formatting)
- Ruff (linting)
- Type hints ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
- Docstrings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å function
```

```typescript
// TypeScript
- Prettier (code formatting)
- ESLint (linting)
- Strict mode
- Interface definitions ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
- JSDoc ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å function
```

### 6. Architecture Principles
- **Modular Design**: ‡∏ó‡∏∏‡∏Å component ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô independent ‡πÅ‡∏•‡∏∞ reusable
- **Type Safety**: ‡πÉ‡∏ä‡πâ TypeScript ‡πÅ‡∏•‡∏∞ Pydantic ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡πà‡∏á‡∏Ñ‡∏£‡∏±‡∏î
- **Async First**: ‡πÉ‡∏ä‡πâ async/await ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö I/O operations
- **Error Handling**: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ informative messages

### 7. File Structure Guidelines
```
chonost-app/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ components/     # React components
‚îÇ   ‚îú‚îÄ‚îÄ services/       # API services
‚îÇ   ‚îú‚îÄ‚îÄ stores/         # State management
‚îÇ   ‚îú‚îÄ‚îÄ types/          # TypeScript types
‚îÇ   ‚îî‚îÄ‚îÄ utils/          # Utility functions
‚îú‚îÄ‚îÄ src-tauri/          # Tauri backend
‚îî‚îÄ‚îÄ sidecar/            # FastAPI sidecar

chonost-mcp/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ agents/         # AI Agents
‚îÇ   ‚îú‚îÄ‚îÄ core/           # Core business logic
‚îÇ   ‚îú‚îÄ‚îÄ mcp/            # MCP server
‚îÇ   ‚îú‚îÄ‚îÄ services/       # External services
‚îÇ   ‚îî‚îÄ‚îÄ utils/          # Utility functions
‚îî‚îÄ‚îÄ tests/              # Test files
```

### 8. Database Guidelines
- ‡πÉ‡∏ä‡πâ Alembic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö migrations
- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î models ‡∏î‡πâ‡∏ß‡∏¢ SQLAlchemy 2.0 syntax
- ‡πÉ‡∏ä‡πâ async operations ‡πÄ‡∏™‡∏°‡∏≠
- ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ table ‡πÅ‡∏•‡∏∞ column ‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô

### 9. API Design Guidelines
- ‡πÉ‡∏ä‡πâ FastAPI decorators ‡πÅ‡∏•‡∏∞ Pydantic models
- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î response models ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
- ‡πÉ‡∏ä‡πâ proper HTTP status codes
- ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ CORS ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

### 10. Testing Requirements
- Unit tests ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö business logic
- Integration tests ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API endpoints
- Mock external dependencies
- Test error scenarios

## üé® UI/UX Guidelines

### The Trinity Layout Implementation
```typescript
// Layout Structure
interface TrinityLayout {
  leftPanel: ExplorerPanel;    // File/Project browser
  centerPanel: EditorPanel;    // Code editor + Whiteboard
  rightPanel: ToolsPanel;      // Chat + Tools
}

// Responsive Design
- Mobile-first approach
- Collapsible panels
- Keyboard shortcuts
- Dark/Light theme support
```

### Excalidraw Integration
- ‡πÉ‡∏ä‡πâ @excalidraw/excalidraw ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö whiteboard functionality
- Integrate ‡∏Å‡∏±‡∏ö code editor
- Support for diagrams ‡πÅ‡∏•‡∏∞ flowcharts
- Export/Import capabilities

## üîß Development Workflow

### 1. Feature Development
1. ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á Core Concepts ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Tech Stack compatibility
3. ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô architecture
4. Implement ‡∏ï‡∏≤‡∏° standards
5. Test ‡πÅ‡∏•‡∏∞ validate
6. Update documentation

### 2. Code Review Checklist
- [ ] Type safety ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
- [ ] Error handling ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- [ ] Performance considerations
- [ ] Security best practices
- [ ] Documentation updated
- [ ] Tests written

### 3. Deployment Guidelines
- ‡πÉ‡∏ä‡πâ Docker ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö containerization
- Environment variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö configuration
- Health checks ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö services
- Monitoring ‡πÅ‡∏•‡∏∞ logging

## üö® Critical Reminders

### ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö Core Features
- **The All-Seeing Eye**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö file watching ‡πÅ‡∏•‡∏∞ indexing performance
- **The Forge**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Docker security ‡πÅ‡∏•‡∏∞ resource limits
- **The Trinity Layout**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö responsive design ‡πÅ‡∏•‡∏∞ accessibility
- **The Living Dictionary**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö vector search accuracy ‡πÅ‡∏•‡∏∞ relevance
- **MCP**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö tool integration ‡πÅ‡∏•‡∏∞ error handling
- **AI Agents**: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö autonomy ‡πÅ‡∏•‡∏∞ safety measures

### Security Considerations
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input validation
- ‡πÉ‡∏ä‡πâ proper authentication/authorization
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS settings
- ‡πÉ‡∏ä‡πâ HTTPS ‡πÉ‡∏ô production
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö dependency vulnerabilities

### Performance Guidelines
- ‡πÉ‡∏ä‡πâ async operations
- Implement caching strategies
- Monitor memory usage
- Optimize database queries
- Use proper indexing

## üìö Documentation Standards

### Code Documentation
- JSDoc ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö TypeScript
- Docstrings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Python
- README files ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å module
- API documentation ‡∏î‡πâ‡∏ß‡∏¢ FastAPI auto-docs

### Architecture Documentation
- System architecture diagrams
- Component interaction flows
- Database schema documentation
- Deployment guides

---

**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏**: ‡∏Å‡∏é‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå Chonost Ecosystem ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡πà‡∏á‡∏Ñ‡∏£‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
