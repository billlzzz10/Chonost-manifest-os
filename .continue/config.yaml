name: "Chonost Ecosystem - Unified Development Environment"
version: "2.1.0"

models:
  # Cost-Optimized Default Models (Free Tier)
  - name: GPT-3.5-Turbo (Default)
    provider: openai
    model: gpt-3.5-turbo
    apiKey: ${OPENAI_API_KEY}

  - name: Claude-3-Haiku (Cost-Effective)
    provider: anthropic
    model: claude-3-haiku-20240307
    apiKey: ${ANTHROPIC_API_KEY}

  # Premium Models (Plus Tier)
  - name: GPT-4
    provider: openai
    model: gpt-4
    apiKey: ${OPENAI_API_KEY}

  - name: Claude-3.5-Sonnet
    provider: anthropic
    model: claude-3-5-sonnet-20241022
    apiKey: ${ANTHROPIC_API_KEY}

  # xAI Models
  - name: Grok Beta
    provider: openai
    model: grok-beta
    apiKey: ${XAI_API_KEY}
    apiBase: https://api.x.ai/v1

  # OpenRouter Models (Cost-Effective Options)
  - name: WizardLM-2-8x22B (OpenRouter)
    provider: openai
    model: microsoft/wizardlm-2-8x22b
    apiKey: ${OPENROUTER_API_KEY}
    apiBase: https://openrouter.ai/api/v1

  - name: MythoMax-L2-13B (OpenRouter)
    provider: openai
    model: meta-llama/llama-2-13b-chat
    apiKey: ${OPENROUTER_API_KEY}
    apiBase: https://openrouter.ai/api/v1

  # Local AI Models (Ollama)
  - name: Llama2 Local
    provider: ollama
    model: llama2:7b
    apiBase: http://localhost:11434

  - name: CodeLlama Local
    provider: ollama
    model: codellama:7b
    apiBase: http://localhost:11434

  - name: Mistral Local
    provider: ollama
    model: mistral:7b
    apiBase: http://localhost:11434

context:
  - provider: file
    name: Current File

  - provider: codebase
    name: Chonost Codebase

mcpServers:
  # Chonost-specific MCP servers
  - name: chonost-backend
    command: python
    args: ["chonost-unified/backend/run_server.py"]
    env:
      PYTHONPATH: "."

  - name: filesystem
    command: npx
    args: ["-y", "@modelcontextprotocol/server-filesystem", "."]

  - name: git
    command: npx
    args: ["-y", "@modelcontextprotocol/server-git", "--repository", "."]

rules:
  - name: "Chonost Core Concepts"
    rule: "Always reference The Trinity Layout, The All-Seeing Eye, The Forge, The Living Dictionary, and MCP concepts"
    globs: ["**/*"]

  - name: "Tech Stack Compliance"
    rule: "Use only approved technologies: React+Vite, FastAPI, Tauri, TypeScript, Python"
    globs: ["**/*.{ts,tsx,py,js,jsx}"]

  - name: "Kilo Code Integration"
    rule: "Use Kilo Code tools for file operations, terminal commands, and project analysis"
    globs: ["**/*"]

  - name: "Cursor Standards"
    rule: "Follow Cursor coding standards from .cursorrules for consistent development"
    globs: ["**/*"]

  - name: "Architecture Guidelines"
    rule: "Maintain modular design, type safety, async operations, and proper error handling"
    globs: ["**/*"]