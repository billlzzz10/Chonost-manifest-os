# ü§ñ Agent Model Configuration
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Ollama models ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Agent

class AgentModelConfig:
    """‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Ollama models ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI Agent Ecosystem"""
    
    # Models ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
    AVAILABLE_MODELS = {
        "deepseek-coder:6.7b-instruct": {
            "size": "3.8 GB",
            "strengths": ["coding", "debugging", "code review"],
            "best_for": ["Developer Agent", "QA_Agent"]
        },
        "llama3.1:8b": {
            "size": "4.9 GB", 
            "strengths": ["planning", "project management", "general reasoning"],
            "best_for": ["ProjectPlanner Agent"]
        },
        "qwen3:8b": {
            "size": "5.2 GB",
            "strengths": ["analysis", "risk assessment", "decision making"],
            "best_for": ["Guardian Agent"]
        },
        "deepseek-r1:7b": {
            "size": "4.7 GB",
            "strengths": ["text analysis", "risk assessment", "general tasks"],
            "best_for": ["Text Analysis", "Risk Assessment"]
        },
        "phi4:latest": {
            "size": "9.1 GB",
            "strengths": ["general purpose", "reasoning", "complex tasks"],
            "best_for": ["General Purpose", "Complex Analysis"]
        }
    }
    
    # ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î Model ‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞ Agent
    AGENT_MODELS = {
        "project_planner": {
            "primary": "llama3.1:8b",
            "fallback": "deepseek-r1:7b",
            "reason": "‡πÄ‡∏Å‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"
        },
        "guardian": {
            "primary": "qwen3:8b", 
            "fallback": "deepseek-r1:7b",
            "reason": "‡πÄ‡∏Å‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á"
        },
        "developer": {
            "primary": "deepseek-coder:6.7b-instruct",
            "fallback": "phi4:latest",
            "reason": "‡πÄ‡∏Å‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
        },
        "qa_agent": {
            "primary": "deepseek-coder:6.7b-instruct",
            "fallback": "llama3.1:8b", 
            "reason": "‡πÄ‡∏Å‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÇ‡∏Ñ‡πâ‡∏î"
        }
    }
    
    @classmethod
    def get_agent_model(cls, agent_name: str) -> dict:
        """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• model ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Agent"""
        return cls.AGENT_MODELS.get(agent_name, {
            "primary": "llama3.1:8b",
            "fallback": "deepseek-r1:7b",
            "reason": "Default model"
        })
    
    @classmethod
    def list_available_models(cls) -> dict:
        """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ models ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà"""
        return cls.AVAILABLE_MODELS
    
    @classmethod
    def get_model_info(cls, model_name: str) -> dict:
        """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• model"""
        return cls.AVAILABLE_MODELS.get(model_name, {})
    
    @classmethod
    def validate_model(cls, model_name: str) -> bool:
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ model ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
        return model_name in cls.AVAILABLE_MODELS

# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
if __name__ == "__main__":
    config = AgentModelConfig()
    
    print("ü§ñ Available Models:")
    for model, info in config.list_available_models().items():
        print(f"  - {model} ({info['size']})")
        print(f"    Strengths: {', '.join(info['strengths'])}")
        print(f"    Best for: {', '.join(info['best_for'])}")
        print()
    
    print("üë• Agent Model Assignments:")
    for agent, model_info in config.AGENT_MODELS.items():
        print(f"  - {agent}: {model_info['primary']}")
        print(f"    Reason: {model_info['reason']}")
        print(f"    Fallback: {model_info['fallback']}")
        print()
