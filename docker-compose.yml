version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chonost
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
    volumes:
      - ./services/backend:/app
      - ./data:/app/data
    networks:
      - chonost-network

  # Frontend Web Application
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_WS_URL=ws://backend:8000/ws
    depends_on:
      - backend
    volumes:
      - ./services/frontend:/app
      - /app/node_modules
    networks:
      - chonost-network

  # AI Service
  ai-service:
    build:
      context: ./services/ai
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chonost
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/ai:/app
      - ./data:/app/data
    networks:
      - chonost-network

  # Database Service
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=chonost
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - chonost-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chonost-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - chonost-network

  # Grafana Monitoring
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - chonost-network

  # Testing Service
  testing:
    build:
      context: ./services/testing
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chonost_test
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/testing:/app
    networks:
      - chonost-network
    profiles:
      - testing

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  grafana_data:

networks:
  chonost-network:
    driver: bridge
